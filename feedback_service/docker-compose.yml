version: '4'
services:
  web:
    image: nginx:latest
    volumes:
      - ./my-website:/usr/share/nginx/html  # Mount local HTML folder into container
    ports:
      - "8080:80"
      
  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql_db
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  # Referencing the variable from .env
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql

  order_service:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: order_service/Dockerfile
    ports:
      - "5001:5001"


  feedback_service:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: feedback_service/Dockerfile
    ports:
      - "5003:5003"


  submit_feedback_service:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: submit_feedback_service/Dockerfile
    ports:
      - "5005:5005"
    depends_on:
      - order_service
      - feedback_service


  aggregator:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: aggregator/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - QUEUE_NAME=feedback_alert
    depends_on:
      - feedback_service
    command: python aggregator.py  # Make sure this matches your script filename

  notification:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: notification_service/Dockerfile
    environment:
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - RECIPIENT_EMAIL=${RECIPIENT_EMAIL}
    ports:
      - "5006:5006"
    depends_on:
      - aggregator
    command: python notification.py  # Ensure this matches the filename of your notification script

volumes:
  mysql_data:
