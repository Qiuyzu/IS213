

# Custom network
networks:
  esd-net:  
    driver: bridge

services:

  order_service:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: order_service/Dockerfile
    environment:
      dbURL: mysql+mysqlconnector://root@host.docker.internal:3306/is213_order
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"
    networks:
      - esd-net


  feedback_service:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: feedback_service/Dockerfile
    environment:
      dbURL: mysql+mysqlconnector://root@host.docker.internal:3306/is213_feedback
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"
    networks:
      - esd-net

  submit_feedback_service:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: submit_feedback_service/Dockerfile
    ports:
      - "5005:5005"
    depends_on:
      - order_service
      - feedback_service
      
    networks:
        - esd-net


  aggregator:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: aggregator/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - QUEUE_NAME=feedback_alert
    depends_on:
      - feedback_service
    command: python aggregator.py  # Make sure this matches your script filename
    networks:
        - esd-net

  notification:
    build:
      context: .  # Change the context to the root of the project
      dockerfile: notification_service/Dockerfile
    environment:
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - RECIPIENT_EMAIL=${RECIPIENT_EMAIL}
    ports:
      - "5006:5006"
    depends_on:
      - aggregator
    command: python notification.py  # Ensure this matches the filename of your notification script
    networks:
        - esd-net
